Introduction
============
This is a collection of [Puppet](http://reductivelabs.com/trac/puppet/wiki/DocumentationStart) configuration files for FreeBSD. I make heavy use of defaults and defines to heavily reduce code weight. Hopefully this will be of instructive value to new users of Puppet and inspirational value to old users.

I am definitely willing to add additional documentation as necessary. Just [email](mailto:eshao@nekogiri.com) me.


Infrastructure
--------------
(TODO: Introduction to my server's infrastructure and personal philosophy behind managing servers here.)

I heavily use jails as a virtualization tool. Puppet + Jails = easy to put up and tear down (virtual) machines at whim.


List of Modules
---------------
* __core__ -- System files for hypervisor and child jails.
* __environment/project__ -- Baseline programming environments for projects to inherit and examples of some of those projects.
* __exim/mailman__ -- Configuration for baseline exim/mailman install. Extensive documentation available on how to move from one server to another. Less, but still documented, on how to install.
* __ezjail__ -- Jail manager for FreeBSD. Really useful for setting up/tearing down jails quickly.
* __mount__ -- Very simple module to control jailed fstabs for ezjail.
* __nginx__ -- Complete configuration to nginx, one of my specialties. It includes a copy of [stationx](http://github.com/eshao/stationx), a configuration generation tool for nginx -- it makes managing nginx configuration files much easier!
* __mysql__ -- Simple mysql+[sphinx](http://www.sphinxsearch.com/) module.
* __ports__ -- Controls installation of all software not covered above. (Basically, every port that requires installation but not configuration.) Includes simple ruby script to help automate this process.
* __puppet__ -- Meta module that maintains Puppet's files. Essential for any Puppet setup.
* __ssh__ -- Managed per-machine ssh keys.
* __thttpd__ -- Configured specifically for nginx/mailman.
* __user__ -- Shows how to setup the virtual/real user model advocated on Puppet's wiki. The examples there aren't as full, so this should be helpful to new users.

Caveats
-------
These configuration files are all working and in production on my own server. However, because I redacted several files for privacy reasons (SSH id_rsa's, for example), I don't guarantee that the complete configuration will work out of the box for you.

However, I still think they'll be of instructive value for those who think/code like me. I searched quite a while for a complete/simple/comprehensive Puppet public repository and failed to find one. There are several [complete](http://reductivelabs.com/trac/puppet/wiki/DocumentationStart) ones, but were slightly confusing for me to follow along.

My suggestion for you is try all of them and pick the author you find most lucid.

- - -

Files changed for privacy concerns:

* __tagmail.conf__ -- redacted email addresses.
* __modules/puppet/templates/tagmail.conf.erb__ -- redacted email addresses.
* __modules/exim/templates/aliases.erb__ -- redacted email addresses.
* __modules/user/manifests/virtual.pp__ -- removed users and changed to bogus password hashes.
* __modules/user/manifests/real/dso.pp__ -- changed real users to bogus ones.
* __modules/user/manifests/real/neko.pp__ -- changed real users to bogus ones.

Files blanked to size 0 for privacy concerns:

* __modules/nginx/files/passwords/personal.htaccess__ -- obvious reason.

Files removed for privacy concerns:

* __modules/nginx/files/enabled/*__ -- (5 files) -- unnecessary, as can generate it using included stationx.
* __modules/ssh/files/*__ -- (15 files) -- files of format: ssh_host_{dsa,rsa,}_key.<hostname>


TODO
----
There is an embarassing amount TODO simply because I just started this project. Hints on how to prioritize would be nice. Again, hit up my email.

* Introduction on my server infrastructure / use of jails as a background.
* Logic behind the various files in /manifests and how they interact.
* Document the use of defines and defaults within modules.
* Table of contents page with brief summary of each module.
* Make this TODO list comprehensive.
